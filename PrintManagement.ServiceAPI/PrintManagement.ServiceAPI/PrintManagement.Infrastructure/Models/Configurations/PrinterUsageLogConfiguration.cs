// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using PrintManagement.Infrastructure;
using System;
using System.Collections.Generic;

namespace PrintManagement.Infrastructure.Configurations
{
    public partial class PrinterUsageLogConfiguration : IEntityTypeConfiguration<PrinterUsageLog>
    {
        public void Configure(EntityTypeBuilder<PrinterUsageLog> entity)
        {
            entity.HasKey(e => e.Oid);

            entity.ToTable("PrinterUsageLog");

            entity.Property(e => e.Oid).HasDefaultValueSql("(newsequentialid())");

            entity.Property(e => e.DocumentName).HasMaxLength(255);

            entity.Property(e => e.DriverName).HasMaxLength(255);

            entity.Property(e => e.JobSize).HasComment("Kích thước job");

            entity.Property(e => e.JobStatus).HasMaxLength(255);

            entity.Property(e => e.MachineName)
                .HasMaxLength(255)
                .HasComment("Máy tạo lệnh in");

            entity.Property(e => e.PaperKind)
                .HasMaxLength(255)
                .IsUnicode(false);

            entity.Property(e => e.PrintProcessorName).HasMaxLength(255);

            entity.Property(e => e.PrinterName).HasMaxLength(255);

            entity.Property(e => e.Signature)
                .HasMaxLength(255)
                .IsUnicode(false);

            entity.Property(e => e.UsageBy).HasMaxLength(255);

            entity.Property(e => e.UsageDate).HasColumnType("datetime");

            entity.Property(e => e.UserName)
                .HasMaxLength(255)
                .HasComment("Người dùng đã gửi công việc");

            entity.HasOne(d => d.IdDocumentNavigation)
                .WithMany(p => p.PrinterUsageLogs)
                .HasForeignKey(d => d.IdDocument)
                .HasConstraintName("FK_PrinterUsageLog_Document");

            entity.HasOne(d => d.IdPrinterNavigation)
                .WithMany(p => p.PrinterUsageLogs)
                .HasForeignKey(d => d.IdPrinter)
                .HasConstraintName("FK_PrinterUsageLog_Printer");

            entity.HasOne(d => d.IdUserNavigation)
                .WithMany(p => p.PrinterUsageLogs)
                .HasForeignKey(d => d.IdUser)
                .HasConstraintName("FK_PrinterUsageLog_User");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<PrinterUsageLog> entity);
    }
}
